# {{ansible_managed}}

version: '2'

services:

  redis:
    image: redis:alpine
    restart: always
    networks:
      - internal

  # port 5432
  db:
    image: postgres:latest
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
#      - ./db:/var/lib/mysql
      - ./db:/var/lib/postgresql/data
    env_file:
      - db.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - internal

  app:
    image: nextcloud:24-apache
    hostname: nextcloud
    container_name: {{ nextcloud_container_name }}
    restart: always
    expose:
      - 80
    links:
      - db
      - redis
    volumes:
      - ./nextcloud:/var/www/html
      - ./apps:/var/www/html/custom_apps
      - ./config:/var/www/html/config
      - cifs-cloudstorage:/var/www/html/data:rw
    env_file:
      - db.env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      # for Apache to work with reverse proxy
      - APACHE_DISABLE_REWRITE_IP: 1
      # set to reverse proxy IP address, i.e. caddy
      - TRUSTED_PROXIES: 172.20.0.3/16
    networks:
      - proxy_{{ nextcloud_container_name }}
      - internal
    depends_on:
      - db
      - redis

volumes:
  cifs-cloudstorage:
    driver_opts:
      type: cifs
      o: "username={{ nextcloud_cifs_user }},password={{ nextcloud_cifs_pass }},uid={{ nextcloud_cifs_uid }},gid={{ nextcloud_cifs_gid }},vers=3.0,rw"
      device: "//{{ nas_ip_address }}/{{ nextcloud_cifs_share }}"

networks:
  proxy_{{ nextcloud_container_name }}:
    external: true
  internal:
    internal: true
