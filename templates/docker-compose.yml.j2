# {{ansible_managed}}

version: '2'

services:

  redis:
    image: redis:{{ nextcloud_redis_version }}-alpine
    restart: always
    networks:
      - internal

  # port 5432
  db:
    image: postgres:{{ nextcloud_postgres_version }}-alpine
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file: .env
    networks:
      - internal

  app:
    image: nextcloud:{{ nextcloud_app_version }}-apache
    hostname: nextcloud
    container_name: {{ nextcloud_container_name }}
    restart: always
    mem_limit: 2048m
    mem_reservation: 512m
    expose:
      - 80
    links:
      - db
      - redis
    volumes:
      - ./nextcloud:/var/www/html
      - ./apps:/var/www/html/custom_apps
      - ./config:/var/www/html/config
      - cifs-cloudstorage:/var/www/html/data:rw
    env_file: .env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      # make Apache work with reverse proxy
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES={{ nextcloud_trusted_proxies }}
      - NEXTCLOUD_TRUSTED_DOMAINS={{ nextcloud_trusted_domains }}
    networks:
      - proxy_{{ nextcloud_container_name }}
      - internal
    depends_on:
      - db
      - redis
{% if nextcloud_use_traefik %}
    labels:
      - "traefik.enable={{ nextcloud_traefik_enabled }}"
      - "traefik.docker.network=proxy_{{ nextcloud_container_name }}"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.services.nextcloud.loadbalancer.server.scheme=http"
      - "traefik.http.routers.nextcloud-secure.entrypoints=websecure"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`{{ nextcloud_container_name }}.{{ nextcloud_domain }}`)"
      - "traefik.http.routers.nextcloud-secure.tls=true"
      - "traefik.http.routers.nextcloud-secure.tls.certresolver={{ nextcloud_traefik_tls_certresolver }}"
      - "traefik.http.routers.nextcloud-secure.middlewares=nextcloud_redirectregex,nextcloud_headers"
      # enable service discovery through the reverse proxy
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex=https://(.*)/.well-known/webfinger"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex=https://(.*)/.well-known/nodeinfo"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav"
      # HSTS
      - "traefik.http.middlewares.nextcloud_headers.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud_headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.nextcloud_headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.nextcloud_headers.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.nextcloud_headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.nextcloud_headers.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow"
      # - "traefik.http.middlewares.nextcloud_headers.headers.contentSecurityPolicy=default-src"
      
{% endif %}

  cron:
    image: nextcloud:{{ nextcloud_app_version }}-apache
    restart: always
    volumes:
      - ./nextcloud:/var/www/html:rw
      - ./apps:/var/www/html/custom_apps:rw
      - ./config:/var/www/html/config:rw
      - cifs-cloudstorage:/var/www/html/data:rw
    networks:
      - internal
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

volumes:
  cifs-cloudstorage:
    driver_opts:
      type: cifs
      o: "username=${CIFS_USER},password=${CIFS_PASS},uid=${CIFS_UID},gid=${CIFS_GID},vers=3.0,rw,dir_mode=0770,file_mode=0600"
      device: "//${CIFS_SHARE_IP}/${CIFS_SHARE_NAME}"

networks:
  proxy_{{ nextcloud_container_name }}:
    external: true
  internal:
    internal: true
